name: Build & Test

on:
  push:
    branches:
      - 'master'
      - 'v3.0.0-dev'
  pull_request:
    branches:
      - '**'

jobs:
  build_and_test:
    strategy:
      matrix:
        node: ['12', '14', '16']
        os: ['ubuntu-latest', 'windows-latest']

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build -- --ci

      - name: Test dist
        run: npm run test.dist

      - name: Test testing suite
        run: npm run test.testing

      - name: Test jest
        run: npm run test.jest

      - name: Test end-to-end
        run: npm run test.end-to-end -- --ci

      - name: Test sys-node
        if: matrix.os != 'windows-latest'
        run: npm run test.sys.node

      - name: Pack build artifacts
        if: matrix.os != 'windows-latest'
        run: mv `npm pack` stencil-build.tgz

      - name: Unload build artifacts
        uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest' && matrix.node == '12'
        with:
          name: stencil-build
          path: stencil-build.tgz

  prettier:
    name: Prettier
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Prettier dry-run
        run: npm run prettier.dry-run
