name: Build & Test

on:
  push:
    branches:
      - 'master'
      - 'v3.0.0-dev'
  pull_request:
    branches:
      - '**'

jobs:
  build_and_test:
    strategy:
      matrix:
        node: [12.10.0]
        os: ['ubuntu-latest', 'windows-latest']

    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@master

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci

      - name: Prettier dry-run
        run: npm run prettier.dry-run
        shell: bash

      - name: Build
        run: npm run build -- --ci

      - name: Test dist
        run: npm run test.dist

      - name: Test testing suite
        run: npm run test.testing

      - name: Test jest
        run: npm run test.jest

      - name: Test end-to-end
        run: npm run test.end-to-end -- --ci

      - name: Test sys-node
        if: matrix.os != 'windows-latest'
        run: npm run test.sys.node

      - name: Pack build artifacts
        if: matrix.os != 'windows-latest'
        run: mv `npm pack` stencil-build.tgz

      - name: Unload build artifacts
        uses: actions/upload-artifact@master
        if: matrix.os == 'ubuntu-latest' && matrix.node == '12.10.0'
        with:
          name: stencil-build
          path: stencil-build.tgz

      - name: Run karma tests
        if: matrix.os == 'ubuntu-latest' && matrix.node == '12.10.0'
        run: |
          wget "https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip"
          unzip BrowserStackLocal-linux-x64.zip
          ./BrowserStackLocal -k $BROWSER_STACK_ACCESS_KEY &
          npm run test.karma.prod
        env:
          BROWSER_STACK_ACCESS_KEY: ${{ secrets.BROWSER_STACK_ACCESS_KEY }}
          BROWSER_STACK_USERNAME: ${{ secrets.BROWSER_STACK_USERNAME }}
          CI: true
