/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppRoot {
    }
    interface CmpA {
    }
    interface CmpB {
    }
    interface CmpC {
    }
    interface CmpClientScoped {
    }
    interface CmpClientShadow {
    }
    interface CmpD {
        "uniqueId": string;
    }
    interface CmpScopedA {
    }
    interface CmpScopedB {
    }
    interface CmpTextBlue {
    }
    interface CmpTextGreen {
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    }
    var HTMLAppRootElement: HTMLAppRootElement;
    interface HTMLCmpAElement extends Components.CmpA, HTMLStencilElement {
        prototype: HTMLCmpAElement;
        new (): HTMLCmpAElement;
    }
    var HTMLCmpAElement: HTMLCmpAElement;
    interface HTMLCmpBElement extends Components.CmpB, HTMLStencilElement {
        prototype: HTMLCmpBElement;
        new (): HTMLCmpBElement;
    }
    var HTMLCmpBElement: HTMLCmpBElement;
    interface HTMLCmpCElement extends Components.CmpC, HTMLStencilElement {
        prototype: HTMLCmpCElement;
        new (): HTMLCmpCElement;
    }
    var HTMLCmpCElement: HTMLCmpCElement;
    interface HTMLCmpClientScopedElement extends Components.CmpClientScoped, HTMLStencilElement {
        prototype: HTMLCmpClientScopedElement;
        new (): HTMLCmpClientScopedElement;
    }
    var HTMLCmpClientScopedElement: HTMLCmpClientScopedElement;
    interface HTMLCmpClientShadowElement extends Components.CmpClientShadow, HTMLStencilElement {
        prototype: HTMLCmpClientShadowElement;
        new (): HTMLCmpClientShadowElement;
    }
    var HTMLCmpClientShadowElement: HTMLCmpClientShadowElement;
    interface HTMLCmpDElement extends Components.CmpD, HTMLStencilElement {
        prototype: HTMLCmpDElement;
        new (): HTMLCmpDElement;
    }
    var HTMLCmpDElement: HTMLCmpDElement;
    interface HTMLCmpScopedAElement extends Components.CmpScopedA, HTMLStencilElement {
        prototype: HTMLCmpScopedAElement;
        new (): HTMLCmpScopedAElement;
    }
    var HTMLCmpScopedAElement: HTMLCmpScopedAElement;
    interface HTMLCmpScopedBElement extends Components.CmpScopedB, HTMLStencilElement {
        prototype: HTMLCmpScopedBElement;
        new (): HTMLCmpScopedBElement;
    }
    var HTMLCmpScopedBElement: HTMLCmpScopedBElement;
    interface HTMLCmpTextBlueElement extends Components.CmpTextBlue, HTMLStencilElement {
        prototype: HTMLCmpTextBlueElement;
        new (): HTMLCmpTextBlueElement;
    }
    var HTMLCmpTextBlueElement: HTMLCmpTextBlueElement;
    interface HTMLCmpTextGreenElement extends Components.CmpTextGreen, HTMLStencilElement {
        prototype: HTMLCmpTextGreenElement;
        new (): HTMLCmpTextGreenElement;
    }
    var HTMLCmpTextGreenElement: HTMLCmpTextGreenElement;
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "cmp-a": HTMLCmpAElement;
        "cmp-b": HTMLCmpBElement;
        "cmp-c": HTMLCmpCElement;
        "cmp-client-scoped": HTMLCmpClientScopedElement;
        "cmp-client-shadow": HTMLCmpClientShadowElement;
        "cmp-d": HTMLCmpDElement;
        "cmp-scoped-a": HTMLCmpScopedAElement;
        "cmp-scoped-b": HTMLCmpScopedBElement;
        "cmp-text-blue": HTMLCmpTextBlueElement;
        "cmp-text-green": HTMLCmpTextGreenElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface CmpA {
    }
    interface CmpB {
    }
    interface CmpC {
    }
    interface CmpClientScoped {
    }
    interface CmpClientShadow {
    }
    interface CmpD {
        "uniqueId"?: string;
    }
    interface CmpScopedA {
    }
    interface CmpScopedB {
    }
    interface CmpTextBlue {
    }
    interface CmpTextGreen {
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "cmp-a": CmpA;
        "cmp-b": CmpB;
        "cmp-c": CmpC;
        "cmp-client-scoped": CmpClientScoped;
        "cmp-client-shadow": CmpClientShadow;
        "cmp-d": CmpD;
        "cmp-scoped-a": CmpScopedA;
        "cmp-scoped-b": CmpScopedB;
        "cmp-text-blue": CmpTextBlue;
        "cmp-text-green": CmpTextGreen;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "cmp-a": LocalJSX.CmpA & JSXBase.HTMLAttributes<HTMLCmpAElement>;
            "cmp-b": LocalJSX.CmpB & JSXBase.HTMLAttributes<HTMLCmpBElement>;
            "cmp-c": LocalJSX.CmpC & JSXBase.HTMLAttributes<HTMLCmpCElement>;
            "cmp-client-scoped": LocalJSX.CmpClientScoped & JSXBase.HTMLAttributes<HTMLCmpClientScopedElement>;
            "cmp-client-shadow": LocalJSX.CmpClientShadow & JSXBase.HTMLAttributes<HTMLCmpClientShadowElement>;
            "cmp-d": LocalJSX.CmpD & JSXBase.HTMLAttributes<HTMLCmpDElement>;
            "cmp-scoped-a": LocalJSX.CmpScopedA & JSXBase.HTMLAttributes<HTMLCmpScopedAElement>;
            "cmp-scoped-b": LocalJSX.CmpScopedB & JSXBase.HTMLAttributes<HTMLCmpScopedBElement>;
            "cmp-text-blue": LocalJSX.CmpTextBlue & JSXBase.HTMLAttributes<HTMLCmpTextBlueElement>;
            "cmp-text-green": LocalJSX.CmpTextGreen & JSXBase.HTMLAttributes<HTMLCmpTextGreenElement>;
        }
    }
}
