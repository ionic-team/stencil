#!/usr/bin/env node
'use strict';

process.title = 'stencil';
process.on('unhandledRejection', function(r) { console.error(r) });
process.env.IONIC_CLI_BIN = __filename;

var util = require('../cli/util');
var sys = require('./sys');
var path = require('path');

var cmdArgs = util.cliConfig.getCmdArgs(process);

if (cmdArgs.indexOf('--help') > -1 || cmdArgs.indexOf('-h') > -1) {
  require('./help')();
  process.exit(0);
}

if (cmdArgs.indexOf('init') > -1) {
  require('./init')();
  process.exit(0);
}

var config = util.cliConfig.parseConfig(process, cmdArgs, sys);
if (!config) {
  console.log('"stencil init" can be used to generate the "stencil.config.js" file.')
  process.exit(1);
}

config.sys.compiler = require('../package.json');

if (!config.logger) {
  config.logger = new util.logger.CommandLineLogger({
    level: config.logLevel,
    process: process
  });
}

switch (cmdArgs[2]) {
  case 'build':
    var stencil = require('../compiler');
    stencil.build(config);

    if (config.watch) {
      process.once('SIGINT', () => {
        process.exit(0);
      });
    }
    break;

  default:
    console.error(util.chalk.red.bold('\n  Invalid stencil command, please see the options below:'));
    require('./help')();
    process.exit(1);
}
