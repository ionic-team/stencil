name: Strict Null Checks Burndown
# this is a temporary workflow while we burn down the errors
# from typescript's strictNullChecks option. Once we get to 0
# we can turn that option on all the time and delete this job!

on:
  workflow_call:
    # Make this a reusable workflow, no value needed
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows

jobs:
  strict_null_checks:
    name: Check and Report
    runs-on: 'ubuntu-latest'
    steps:
      # first we need to checkout the main branch, run typescript
      # there, save the result
      - name: Checkout current branch
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Get Core Dependencies
        uses: ./.github/workflows/actions/get-core-dependencies

      - name: Run Typescript compiler (PR branch)
        run: npx tsc --strictNullChecks --noEmit --pretty false | tsc-output-parser > null_errors_pr.json

      - name: Checkout main
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
        with:
          ref: my-branch

      - name: Run Typescript compiler (main branch)
        run: npx tsc --strictNullChecks --noEmit --pretty false | tsc-output-parser > null_errors_main.json

      - name: Set comment body
        id: set-comment-body
        run: |
          body=$(node scripts/strict-null-checks-ci.js)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '### `--strictNullChecks` error report"'

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.set-comment-body.outputs.body }}
          edit-mode: replace
