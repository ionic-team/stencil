name: Strict Null Checks Burndown
# this is a temporary workflow while we burn down the errors
# from typescript's strictNullChecks option. Once we get to 0
# we can turn that option on all the time and delete this job!
#
# TODO(STENCIL-446): Remove this workflow once `strictNullChecks` is enabled

on:
  pull_request:
    branches:
      - '**'

jobs:
  strict_null_check_main:
    name: Get errors on main
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout main branch
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
        with:
          ref: main

      - name: Get Core Dependencies
        uses: ./.github/workflows/actions/get-core-dependencies

      - name: Install tsc-output-parser
        run: npm install @aivenio/tsc-output-parser@2.1.1

      - name: Run Typescript compiler and generate JSON-formatted error file (main branch)
        run: npx tsc --strictNullChecks --noEmit --pretty false | npx tsc-output-parser > null_errors_main.json

      - name: Upload null_errors_main.json
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
        with:
          name: null_errors_main
          path: 'null_errors_main.json'

  strict_null_check_pr:
    needs: [ "strict_null_check_main" ]
    name: Get errors on PR and report
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout current branch
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0

      - name: Get Core Dependencies
        uses: ./.github/workflows/actions/get-core-dependencies

      - name: Install tsc-output-parser
        run: npm install @aivenio/tsc-output-parser@2.1.1

      - name: Run Typescript compiler and generate JSON-formatted error file (PR branch)
        run: npx tsc --strictNullChecks --noEmit --pretty false | npx tsc-output-parser > null_errors_pr.json

      - name: Download error file for main branch
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v3.0.0
        with:
          name: null_errors_main

      - name: Compile scripts
        run: node scripts --prepare

      - name: Set action output
        run: node scripts/build/strict-null-checks-ci.js > $GITHUB_STEP_SUMMARY

       # for syntax information, see https://github.com/peter-evans/create-or-update-comment#setting-the-comment-body-from-a-file
      - name: Set comment body
        id: set-comment-body
        run: |
          body=$(node scripts/build/strict-null-checks-ci.js)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body

      - name: Find Comment
        uses: peter-evans/find-comment@1769778a0c5bd330272d749d12c036d65e70d39d # v2.0.0
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '### `--strictNullChecks` error report'

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@c9fcb64660bc90ec1cc535646af190c992007c32 # v2.0.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.set-comment-body.outputs.body }}
          edit-mode: replace
