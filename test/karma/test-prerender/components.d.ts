/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface CmpA {

    }
  }

  interface HTMLCmpAElement extends StencilComponents.CmpA, HTMLStencilElement {}

  var HTMLCmpAElement: {
    prototype: HTMLCmpAElement;
    new (): HTMLCmpAElement;
  };
  interface HTMLElementTagNameMap {
    'cmp-a': HTMLCmpAElement;
  }
  interface ElementTagNameMap {
    'cmp-a': HTMLCmpAElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'cmp-a': JSXElements.CmpAAttributes;
    }
  }
  namespace JSXElements {
    export interface CmpAAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface CmpB {

    }
  }

  interface HTMLCmpBElement extends StencilComponents.CmpB, HTMLStencilElement {}

  var HTMLCmpBElement: {
    prototype: HTMLCmpBElement;
    new (): HTMLCmpBElement;
  };
  interface HTMLElementTagNameMap {
    'cmp-b': HTMLCmpBElement;
  }
  interface ElementTagNameMap {
    'cmp-b': HTMLCmpBElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'cmp-b': JSXElements.CmpBAttributes;
    }
  }
  namespace JSXElements {
    export interface CmpBAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface CmpC {

    }
  }

  interface HTMLCmpCElement extends StencilComponents.CmpC, HTMLStencilElement {}

  var HTMLCmpCElement: {
    prototype: HTMLCmpCElement;
    new (): HTMLCmpCElement;
  };
  interface HTMLElementTagNameMap {
    'cmp-c': HTMLCmpCElement;
  }
  interface ElementTagNameMap {
    'cmp-c': HTMLCmpCElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'cmp-c': JSXElements.CmpCAttributes;
    }
  }
  namespace JSXElements {
    export interface CmpCAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface CmpD {
      'uniqueId': string;
    }
  }

  interface HTMLCmpDElement extends StencilComponents.CmpD, HTMLStencilElement {}

  var HTMLCmpDElement: {
    prototype: HTMLCmpDElement;
    new (): HTMLCmpDElement;
  };
  interface HTMLElementTagNameMap {
    'cmp-d': HTMLCmpDElement;
  }
  interface ElementTagNameMap {
    'cmp-d': HTMLCmpDElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'cmp-d': JSXElements.CmpDAttributes;
    }
  }
  namespace JSXElements {
    export interface CmpDAttributes extends HTMLAttributes {
      'uniqueId'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
