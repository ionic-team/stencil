export declare const HYDRATE_APP_CLOSURE_START = "/*hydrateAppClosure start*/";
export declare const HYDRATE_FACTORY_INTRO = "\nexport function hydrateFactory($stencilWindow, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve) {\n  var globalThis = $stencilWindow;\n  var self = $stencilWindow;\n  var top = $stencilWindow;\n  var parent = $stencilWindow;\n\n  var addEventListener = $stencilWindow.addEventListener.bind($stencilWindow);\n  var alert = $stencilWindow.alert.bind($stencilWindow);\n  var blur = $stencilWindow.blur.bind($stencilWindow);\n  var cancelAnimationFrame = $stencilWindow.cancelAnimationFrame.bind($stencilWindow);\n  var cancelIdleCallback = $stencilWindow.cancelIdleCallback.bind($stencilWindow);\n  var clearInterval = $stencilWindow.clearInterval.bind($stencilWindow);\n  var clearTimeout = $stencilWindow.clearTimeout.bind($stencilWindow);\n  var close = () => {};\n  var confirm = $stencilWindow.confirm.bind($stencilWindow);\n  var dispatchEvent = $stencilWindow.dispatchEvent.bind($stencilWindow);\n  var focus = $stencilWindow.focus.bind($stencilWindow);\n  var getComputedStyle = $stencilWindow.getComputedStyle.bind($stencilWindow);\n  var matchMedia = $stencilWindow.matchMedia.bind($stencilWindow);\n  var open = $stencilWindow.open.bind($stencilWindow);\n  var prompt = $stencilWindow.prompt.bind($stencilWindow);\n  var removeEventListener = $stencilWindow.removeEventListener.bind($stencilWindow);\n  var requestAnimationFrame = $stencilWindow.requestAnimationFrame.bind($stencilWindow);\n  var requestIdleCallback = $stencilWindow.requestIdleCallback.bind($stencilWindow);\n  var setInterval = $stencilWindow.setInterval.bind($stencilWindow);\n  var setTimeout = $stencilWindow.setTimeout.bind($stencilWindow);\n\n  var CharacterData = $stencilWindow.CharacterData;\n  var CSS = $stencilWindow.CSS;\n  var CustomEvent = $stencilWindow.CustomEvent;\n  var Document = $stencilWindow.Document;\n  var DocumentFragment = $stencilWindow.DocumentFragment;\n  var DocumentType = $stencilWindow.DocumentType;\n  var DOMTokenList = $stencilWindow.DOMTokenList;\n  var Element = $stencilWindow.Element;\n  var Event = $stencilWindow.Event;\n  var HTMLAnchorElement = $stencilWindow.HTMLAnchorElement;\n  var HTMLBaseElement = $stencilWindow.HTMLBaseElement;\n  var HTMLButtonElement = $stencilWindow.HTMLButtonElement;\n  var HTMLCanvasElement = $stencilWindow.HTMLCanvasElement;\n  var HTMLElement = $stencilWindow.HTMLElement;\n  var HTMLFormElement = $stencilWindow.HTMLFormElement;\n  var HTMLImageElement = $stencilWindow.HTMLImageElement;\n  var HTMLInputElement = $stencilWindow.HTMLInputElement;\n  var HTMLLinkElement = $stencilWindow.HTMLLinkElement;\n  var HTMLMetaElement = $stencilWindow.HTMLMetaElement;\n  var HTMLScriptElement = $stencilWindow.HTMLScriptElement;\n  var HTMLStyleElement = $stencilWindow.HTMLStyleElement;\n  var HTMLTemplateElement = $stencilWindow.HTMLTemplateElement;\n  var HTMLTitleElement = $stencilWindow.HTMLTitleElement;\n  var IntersectionObserver = $stencilWindow.IntersectionObserver;\n  var KeyboardEvent = $stencilWindow.KeyboardEvent;\n  var MouseEvent = $stencilWindow.MouseEvent;\n  var Node = $stencilWindow.Node;\n  var NodeList = $stencilWindow.NodeList;\n  var URL = $stencilWindow.URL;\n\n  var console = $stencilWindow.console;\n  var customElements = $stencilWindow.customElements;\n  var history = $stencilWindow.history;\n  var localStorage = $stencilWindow.localStorage;\n  var location = $stencilWindow.location;\n  var navigator = $stencilWindow.navigator;\n  var performance = $stencilWindow.performance;\n  var sessionStorage = $stencilWindow.sessionStorage;\n\n  var devicePixelRatio = $stencilWindow.devicePixelRatio;\n  var innerHeight = $stencilWindow.innerHeight;\n  var innerWidth = $stencilWindow.innerWidth;\n  var origin = $stencilWindow.origin;\n  var pageXOffset = $stencilWindow.pageXOffset;\n  var pageYOffset = $stencilWindow.pageYOffset;\n  var screen = $stencilWindow.screen;\n  var screenLeft = $stencilWindow.screenLeft;\n  var screenTop = $stencilWindow.screenTop;\n  var screenX = $stencilWindow.screenX;\n  var screenY = $stencilWindow.screenY;\n  var scrollX = $stencilWindow.scrollX;\n  var scrollY = $stencilWindow.scrollY;\n  var exports = {};\n\n  var fetch, FetchError, Headers, Request, Response;\n\n  if (typeof $stencilWindow.fetch === 'function') {\n    fetch = $stencilWindow.fetch;\n  } else {\n    fetch = $stencilWindow.fetch = function() { throw new Error('fetch() is not implemented'); };\n  }\n\n  if (typeof $stencilWindow.FetchError === 'function') {\n    FetchError = $stencilWindow.FetchError;\n  } else {\n    FetchError = $stencilWindow.FetchError = class FetchError { constructor() { throw new Error('FetchError is not implemented'); } };\n  }\n\n  if (typeof $stencilWindow.Headers === 'function') {\n    Headers = $stencilWindow.Headers;\n  } else {\n    Headers = $stencilWindow.Headers = class Headers { constructor() { throw new Error('Headers is not implemented'); } };\n  }\n\n  if (typeof $stencilWindow.Request === 'function') {\n    Request = $stencilWindow.Request;\n  } else {\n    Request = $stencilWindow.Request = class Request { constructor() { throw new Error('Request is not implemented'); } };\n  }\n\n  if (typeof $stencilWindow.Response === 'function') {\n    Response = $stencilWindow.Response;\n  } else {\n    Response = $stencilWindow.Response = class Response { constructor() { throw new Error('Response is not implemented'); } };\n  }\n\n  function hydrateAppClosure($stencilWindow) {\n    const window = $stencilWindow;\n    const document = $stencilWindow.document;\n    /*hydrateAppClosure start*/\n";
export declare const HYDRATE_FACTORY_OUTRO = "\n    /*hydrateAppClosure end*/\n    hydrateApp(window, $stencilHydrateOpts, $stencilHydrateResults, $stencilAfterHydrate, $stencilHydrateResolve);\n  }\n\n  hydrateAppClosure($stencilWindow);\n}\n";
